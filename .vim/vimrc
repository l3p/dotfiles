source $VIMRUNTIME/defaults.vim

if exists('*minpac#init')
  call minpac#init()
  call minpac#add('k-takata/minpac', {'type': 'opt'})

  call minpac#add('ElmCast/elm-vim')
  call minpac#add('chr4/nginx.vim')
  call minpac#add('junegunn/fzf.vim')
  call minpac#add('lepture/vim-jinja')
  call minpac#add('morhetz/gruvbox', {'type': 'opt'})
  call minpac#add('rodjek/vim-puppet')
  call minpac#add('supercollider/scvim')
  call minpac#add('tpope/vim-commentary')
  call minpac#add('tpope/vim-fugitive')
  call minpac#add('tpope/vim-repeat')
  call minpac#add('tpope/vim-rhubarb')
  call minpac#add('tpope/vim-sensible')
  call minpac#add('tpope/vim-unimpaired')
  call minpac#add('tpope/vim-vinegar')
  call minpac#add('w0rp/ale')
endif
command! PackUpdate packadd minpac | source $MYVIMRC | call minpac#update()

command! PackClean  packadd minpac | source $MYVIMRC | call minpac#clean()
set runtimepath+=/usr/local/opt/fzf

set backup
if has('persistent_undo')
  set undofile
endif

if exists('$TMUX')
  let &t_SI = "\<Esc>Ptmux;\<Esc>\<Esc>]50;CursorShape=1\x7\<Esc>\\"
  let &t_EI = "\<Esc>Ptmux;\<Esc>\<Esc>]50;CursorShape=0\x7\<Esc>\\"
else
  let &t_SI = "\<Esc>]50;CursorShape=1\x7"
  let &t_EI = "\<Esc>]50;CursorShape=0\x7"
endif

set termguicolors
let g:gruvbox_italic = 1
set background=dark
colorscheme gruvbox
" Make true color work also in tmux.
" Those variables are filled automatically only when $TERM=xterm.
" But in tmux, $TERM=screen so we have to set them manually.
" See :help xterm-true-color
let &t_8f = "\<Esc>[38;2;%lu;%lu;%lum"
let &t_8b = "\<Esc>[48;2;%lu;%lu;%lum"

set hlsearch
set ignorecase
set smartcase

set expandtab

set shiftwidth=0  " 0 means use tabstop
set tabstop=2

set cursorline
set showtabline=2
set winwidth=79
set colorcolumn=80
set linebreak

if !has('nvim')
  set ttymouse=xterm2  " enable dragging inside tmux
endif

set number
set listchars=tab:▸\ ,eol:¬,trail:⍽

set backupdir=~/tmp/vim,~/tmp,/var/tmp,/tmp
set directory=~/tmp/vim,~/tmp,/var/tmp,/tmp
set undodir=~/tmp/vim,~/tmp,/var/tmp,/tmp

set nofoldenable

let mapleader=","

" let g:netrw_list_hide='.pyc$'

set statusline=%<%f\ %y%w%q%m%r\ %k%=[%{&fileencoding}-%{&fileformat}]\ 0x%B\ \ %l,%c%V\ %o\ %O\ %P

autocmd BufNewFile,BufRead Vagrantfile setfiletype ruby
autocmd BufNewFile,BufRead *.t setfiletype cram

autocmd FileType ruby map <leader>b Orequire "pry" ; binding.pry<esc>

" autocmd FileType mail setlocal formatoptions+=aw
" nah, unfortunately gmail stopped supporting format=flowed kind of right now.

nnoremap <C-p> :<C-u>FZF<CR>
